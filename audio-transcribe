#!/usr/bin/env python3

import sys
import os
import openai
import argparse
import logging
from read_yaml import get_api_key_value

# List of supported audio file formats
SUPPORTED_FORMATS = ['m4a', 'mp3', 'webm', 'mp4', 'mpga', 'wav', 'mpeg']


def is_valid_file(file_path):
    """Checks if a file exists and is a regular file."""
    return os.path.isfile(file_path)


def is_supported_format(file_path):
    """Checks if a file is of a supported audio format."""
    return os.path.splitext(file_path)[1].lstrip('.').lower() in SUPPORTED_FORMATS


def create_transcript_file(input_file_path):
    """
    Transcribes an audio file and saves the transcript to a file.

    Args:
        input_file_path (str): The path to the input audio file.

    Returns:
        None.
    """
    base_file_name = os.path.splitext(os.path.basename(input_file_path))[0]
    output_file_path = f"{base_file_name}-transcript.txt"

    if os.path.exists(output_file_path):
        logging.warning(f"Output file '{output_file_path}' already exists. Aborting.")
        return

    try:
        with open(input_file_path, "rb") as audio_file:
            transcript = openai.Audio.transcribe("whisper-1", audio_file)
    except FileNotFoundError:
        logging.error(f"Input file '{input_file_path}' not found. Aborting.")
        return
    except Exception as e:
        logging.error(f"Error during API call: {e}")
        return

    try:
        with open(output_file_path, "w") as output_file:
            output_file.write(transcript["text"])
        logging.info(f"Transcription successfully created and saved to '{output_file_path}'.")
    except Exception as e:
        logging.error(f"Error writing output file: {e}")
        return


def parse_args():
    """Parse command line arguments."""
    parser = argparse.ArgumentParser(description="Transcribe audio files using OpenAI API.")
    parser.add_argument("input_file_path", help="Path to the input audio file.")
    return parser.parse_args()


def main():
    """
    Main function that processes command line arguments.

    Args:
        None.

    Returns:
        None.
    """
    args = parse_args()
    input_file_path = args.input_file_path

    if not is_valid_file(input_file_path):
        logging.error(f"Input file '{input_file_path}' does not exist or is not a file. Please provide a valid filename.")
        return

    if not is_supported_format(input_file_path):
        logging.error(f"Unsupported file format for file '{input_file_path}'. Supported formats are: {', '.join(SUPPORTED_FORMATS)}.")
        return

    create_transcript_file(input_file_path)


if __name__ == "__main__":
    logging.basicConfig(level=logging.INFO)
    openai.api_key = get_api_key_value('whisper_01')
    main()
